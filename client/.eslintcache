[{"C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\index.js":"1","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\App.js":"2","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\store.js":"3","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\Profile.js":"4","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\utils\\setAuthToken.js":"5","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\layout\\Landing.js":"6","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\actions\\auth.js":"7","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\layout\\Footer.js":"8","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\layout\\Alert.js":"9","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\layout\\Navbar.js":"10","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\auth\\Register.js":"11","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\dashboard\\Dashboard.js":"12","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\auth\\Login.js":"13","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\layout\\Spinner.js":"14","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\actions\\types.js":"15","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\actions\\alert.js":"16","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\reducers\\auth.js":"17","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\actions\\messages.js":"18","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\dashboard\\Messages.js":"19","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\dashboard\\Container.js":"20","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\reducers\\index.js":"21","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\dashboard\\NewMessage.js":"22","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\layout\\SingleMessage.js":"23","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\dashboard\\SentMessages.js":"24","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\routing\\PrivateRoute.js":"25","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\reducers\\alert.js":"26"},{"size":146,"mtime":1608770416853,"results":"27","hashOfConfig":"28"},{"size":1527,"mtime":1610629901311,"results":"29","hashOfConfig":"28"},{"size":399,"mtime":1608807359653,"results":"30","hashOfConfig":"28"},{"size":2051,"mtime":1610713366906,"results":"31","hashOfConfig":"28"},{"size":253,"mtime":1610380810906,"results":"32","hashOfConfig":"28"},{"size":1084,"mtime":1610649618181,"results":"33","hashOfConfig":"28"},{"size":3121,"mtime":1610708502644,"results":"34","hashOfConfig":"28"},{"size":649,"mtime":1610480494657,"results":"35","hashOfConfig":"28"},{"size":505,"mtime":1608929643137,"results":"36","hashOfConfig":"28"},{"size":1641,"mtime":1610550531536,"results":"37","hashOfConfig":"28"},{"size":2725,"mtime":1610480208972,"results":"38","hashOfConfig":"28"},{"size":835,"mtime":1610623883460,"results":"39","hashOfConfig":"28"},{"size":2032,"mtime":1609021739492,"results":"40","hashOfConfig":"28"},{"size":272,"mtime":1609070491391,"results":"41","hashOfConfig":"28"},{"size":804,"mtime":1610656825696,"results":"42","hashOfConfig":"28"},{"size":354,"mtime":1608929901143,"results":"43","hashOfConfig":"28"},{"size":1480,"mtime":1610633099676,"results":"44","hashOfConfig":"28"},{"size":3121,"mtime":1610708539265,"results":"45","hashOfConfig":"28"},{"size":5628,"mtime":1610648314574,"results":"46","hashOfConfig":"28"},{"size":1273,"mtime":1610658398164,"results":"47","hashOfConfig":"28"},{"size":152,"mtime":1610548903497,"results":"48","hashOfConfig":"28"},{"size":2538,"mtime":1610708423963,"results":"49","hashOfConfig":"28"},{"size":3328,"mtime":1610706408358,"results":"50","hashOfConfig":"28"},{"size":674,"mtime":1610482171729,"results":"51","hashOfConfig":"28"},{"size":662,"mtime":1609022162581,"results":"52","hashOfConfig":"28"},{"size":391,"mtime":1608808666050,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"9wekrp",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"56"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},"C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\index.js",[],["124","125"],"C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\App.js",["126"],"import React, { Fragment, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport \"./App.css\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Alert from \"./components/layout/Alert\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Footer from \"./components/layout/Footer\";\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from \"./actions/auth\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport Profile from \"./components/Profile\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, [loadUser]);\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar></Navbar>\n          <Route exact path=\"/\" component={Landing} />\n          <section className=\"container\">\n            <Alert />\n            <Switch>\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/dashboard\" component={Dashboard} />\n              <Route exact path=\"/profile\" component={Profile} />\n            </Switch>\n          </section>\n          <Footer></Footer>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\store.js",[],"C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\Profile.js",["127","128","129"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { loadUser } from \"../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\nimport avatar from \"../img/avatar.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Spinner from \"../components/layout/Spinner\";\r\nimport { deleteAccount } from \"../actions/auth\";\r\n\r\nconst Profile = ({ auth: { user }, deleteAccount }) => {\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, [loadUser]);\r\n\r\n  const time = user.user.createdAt;\r\n  const time1 = time.split(\"T\");\r\n  const date = time1[0];\r\n\r\n  let history = useHistory();\r\n\r\n  const funkcija = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return user === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1>Here is your profile details</h1>\r\n      <img src={avatar} style={{ width: \"100px\", display: \"block\" }}></img>\r\n      <table>\r\n        <tr>\r\n          <td>\r\n            <label>Name:</label>\r\n          </td>\r\n          <td>\r\n            <lable>{user.user.name}</lable>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <label>Email:</label>\r\n          </td>\r\n          <td>\r\n            <lable>{user.user.email}</lable>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <label>Created at:</label>\r\n          </td>\r\n          <td>\r\n            <lable>{date}</lable>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n      <Link to=\"/dashboard\">\r\n        <btn className=\"btn btn-primary\" type=\"sumbit\">\r\n          Go back\r\n        </btn>\r\n      </Link>\r\n      <Link to=\"/\">\r\n        <btn\r\n          className=\"btn btn-danger\"\r\n          type=\"button\"\r\n          onClick={() => deleteAccount()}\r\n        >\r\n          Delete Account\r\n        </btn>\r\n      </Link>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteAccount })(Profile);\r\n","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\layout\\Landing.js",["130"],"import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Landing = ({ isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\"></Redirect>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"landing\">\r\n        <div className=\"dark-overlay\">\r\n          <div className=\"landing-inner\">\r\n            <div className=\"container1\">\r\n              <h1 className=\"x-large\">AG Mail</h1>\r\n              <p className=\"lead\">\r\n                AG Mail is a project for subject <br />\r\n                Web systems and tehnology, <br />\r\n                feel free to test!\r\n              </p>\r\n              <div className=\"buttons\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\actions\\auth.js",["131","132"],"import axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  DELETE_ACCOUNT,\r\n  PROFILE_ERROR,\r\n} from \"./types\";\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  const x = document.cookie;\r\n  const cookie = x.split(\"=\");\r\n  const token = cookie[1];\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.get(\"/test\", config);\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n//Register user\r\n\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/test\", body, config);\r\n\r\n    dispatch({ type: REGISTER_SUCCESS, payload: res.data });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({ type: REGISTER_FAIL });\r\n  }\r\n};\r\n\r\n//Login user\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const x = document.cookie;\r\n  const cookie = x.split(\"=\");\r\n  const token = cookie[1];\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/test/login\", body, config);\r\n\r\n    dispatch({ type: LOGIN_SUCCESS, payload: res.data });\r\n    dispatch({ type: USER_LOADED });\r\n    dispatch(setAlert(\"Login Succesful\", \"success\"));\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    dispatch(setAlert(\"Invalid Credentials\", \"danger\"));\r\n\r\n    dispatch({ type: LOGIN_FAIL });\r\n  }\r\n};\r\n\r\n// Delete account\r\n\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  const x = document.cookie;\r\n  const cookie = x.split(\"=\");\r\n  const token = cookie[1];\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\r\n    try {\r\n      await axios.delete(`/test`, config);\r\n\r\n      dispatch({\r\n        type: DELETE_ACCOUNT,\r\n      });\r\n\r\n      window.location.reload(false);\r\n      window.location.replace(\"/\");\r\n      dispatch(setAlert(\"Your account has been permanently deleted\", \"danger\"));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n// Logout\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\layout\\Footer.js",["133","134","135","136"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <div class=\"footer\">\r\n      <div className=\"logo\">\r\n        <Link to=\"/dashboard\">\r\n          <i class=\"far fa-envelope\"></i>\r\n          AG email\r\n        </Link>\r\n      </div>\r\n\r\n      <ul>\r\n        <li>\r\n          <a href=\"\">\r\n            <span>About |</span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"\">\r\n            <span>Contact |</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {};\r\n\r\nexport default Footer;\r\n","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\layout\\Navbar.js",["137"],"import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout } from \"../../actions/auth\";\r\nimport auth from \"../../reducers/auth\";\r\n\r\nexport const Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profile\">\r\n          <i class=\"fas fa-user\"></i>\r\n          {\"\"}\r\n          <span className=\"hide-sm\">Profile</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link onClick={logout} to=\"/\">\r\n          <i className=\"fas fa-sign-out-alt\"></i>\r\n          {\"\"}\r\n          <span className=\"hide-sm\">Logout</span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/register\">\r\n          <i id=\"aktivan\" class=\"fas fa-user\"></i>Register\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/login\">\r\n          <i class=\"far fa-user\"></i>Login\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar bg-dark\">\r\n        <h1>\r\n          <Link to=\"/\">\r\n            <i class=\"far fa-envelope\"></i>\r\n            AG email\r\n          </Link>\r\n        </h1>\r\n        {!loading && (\r\n          <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n        )}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\dashboard\\Dashboard.js",["138"],"import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Container from \"./Container\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { loadUser } from \"../../actions/auth\";\r\nimport { getMessages } from \"../../actions/messages\";\r\nimport Messages from \"./Messages\";\r\n\r\nconst Dashboard = ({ auth: { user } }) => {\r\n  useEffect(() => {\r\n    loadUser();\r\n    getMessages();\r\n  }, [loadUser, getMessages]);\r\n  return user === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Container>\r\n        <Messages />\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nContainer.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\layout\\Spinner.js",["139"],"import React, { Fragment } from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n      alt=\"loading\"\r\n    ></img>\r\n  </Fragment>\r\n);\r\n","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\actions\\types.js",[],"C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\actions\\alert.js",[],"C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\reducers\\auth.js",["140"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  DELETE_ACCOUNT,\r\n  SEND_MESSAGE,\r\n} from \"../actions/types\";\r\n\r\nconst initalState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: {\r\n    user: {\r\n      messages: [],\r\n      sentmessages: [],\r\n    },\r\n  },\r\n};\r\n\r\nexport default function (state = initalState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case SEND_MESSAGE:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          user: {\r\n            ...state.user.user,\r\n            sentmessages:[payload,...state.user.user.sentmessages]\r\n          }\r\n        }\r\n      }\r\n    case REGISTER_FAIL:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case AUTH_ERROR:\r\n    case DELETE_ACCOUNT:\r\n      document.cookie =\r\n        \"token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\actions\\messages.js",["141"],"import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport { loadUser } from \"./auth\";\r\n\r\nimport {\r\n  GET_MESSAGES,\r\n  MESSAGES_ERROR,\r\n  SEND_MESSAGE,\r\n  MESSAGE_DELETED,\r\n} from \"./types\";\r\n\r\n//GET MESSAGES FROM USER\r\n\r\nexport const getMessages = () => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.get(\"/messages\", config);\r\n\r\n    dispatch({ type: GET_MESSAGES, payload: res.data });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({ type: MESSAGES_ERROR });\r\n  }\r\n};\r\n// let data = {\r\n//   text: form,\r\n// };\r\n// data = JSON.stringify(data);\r\nexport const sendMessage = (message) => async (dispatch) => {\r\n  const x = document.cookie;\r\n  const cookie = x.split(\"=\");\r\n  const token = cookie[1];\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  let body = {\r\n    email: message.email,\r\n    subject: message.subject,\r\n    body: message.body,\r\n  };\r\n  body = JSON.stringify(body);\r\n\r\n  let payloadMessage = {\r\n    to: message.email,\r\n    subject: message.subject,\r\n    body: message.body,\r\n  };\r\n  try {\r\n    const res = await axios.post(\r\n      \"http://localhost:5000/messages\",\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: SEND_MESSAGE,\r\n      payload: payloadMessage,\r\n    });\r\n    window.location.reload(false);\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n//Delete message\r\n\r\nexport const deleteMessage = (id) => async (dispatch) => {\r\n  const x = document.cookie;\r\n  const cookie = x.split(\"=\");\r\n  const token = cookie[1];\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.delete(`/messages/delete/${id}`, config);\r\n\r\n    dispatch({\r\n      type: MESSAGE_DELETED,\r\n      payload: res.data,\r\n    });\r\n\r\n    window.location.reload(false);\r\n    dispatch(loadUser());\r\n\r\n    dispatch(setAlert(\"Message Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: MESSAGES_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Delete message\r\n\r\nexport const deleteSentMessage = (id) => async (dispatch) => {\r\n  console.log(\"eeee\");\r\n  const x = document.cookie;\r\n  const cookie = x.split(\"=\");\r\n  const token = cookie[1];\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.delete(`/messages/sentmessages/${id}`, config);\r\n\r\n    dispatch({\r\n      type: MESSAGE_DELETED,\r\n      payload: res.data,\r\n    });\r\n\r\n    window.location.reload(false);\r\n    dispatch(setAlert(\"Message Removed\", \"success\"));\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: MESSAGES_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\dashboard\\Messages.js",["142","143","144","145","146","147","148","149","150","151","152","153"],"import React, { Fragment, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport SingleMessage from \"../layout/SingleMessage\";\r\nimport NewMessage from \"./NewMessage\";\r\nimport { sendMessage } from \"../../actions/messages\";\r\n\r\nconst Messages = ({ loading, messages, sentMessages, sendMessage }) => {\r\n  const [displayedMessages, setDisplayedMessages] = useState(\"messages\");\r\n\r\n  const [sendMessageForm, setSentMessageForm] = useState({\r\n    email: \"\",\r\n    subject: \"\",\r\n    body: \"\",\r\n  });\r\n\r\n  const onInputChange = (e) => {\r\n    setSentMessageForm({ ...sendMessageForm, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    sendMessage(sendMessageForm);\r\n    setSentMessageForm({\r\n      email: \"\",\r\n      subject: \"\",\r\n      body: \"\",\r\n    });\r\n  };\r\n\r\n  const onMessagesClick = (e) => {\r\n    setDisplayedMessages(\"messages\");\r\n  };\r\n\r\n  const onSentMessagesClick = (e) => {\r\n    setDisplayedMessages(\"sentMessages\");\r\n  };\r\n\r\n  const sendMessageD = (e) => {\r\n    setDisplayedMessages(\"sendMessage\");\r\n  };\r\n\r\n  const displaySendMessage = () => {\r\n    return (\r\n      <div>\r\n        <div class=\"meni\">\r\n          <a onClick={onMessagesClick}>\r\n            <i class=\"fas fa-inbox\"></i> <span>Inbox</span>\r\n          </a>\r\n          <a onClick={onSentMessagesClick}>\r\n            {\" \"}\r\n            <i class=\"fas fa-paper-plane\"></i> Sent\r\n          </a>\r\n          <a class=\"active-button\" onClick={sendMessageD}>\r\n            <i class=\"fas fa-plus\"></i> <span> New message</span>\r\n          </a>\r\n        </div>\r\n        <form onSubmit={onFormSubmit}>\r\n          <table class=\"messages-box\">\r\n            <tr>\r\n              <td>\r\n                <label>To:</label>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  required\r\n                  type=\"email\"\r\n                  class=\"messages-input top-input\"\r\n                  name=\"email\"\r\n                  value={sendMessageForm.email}\r\n                  onChange={onInputChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <label>Subject:</label>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  required\r\n                  type=\"text\"\r\n                  class=\"messages-input \"\r\n                  name=\"subject\"\r\n                  value={sendMessageForm.subject}\r\n                  onChange={onInputChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <label> Body:</label>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  required\r\n                  class=\"messagebody-input\"\r\n                  name=\"body\"\r\n                  value={sendMessageForm.body}\r\n                  onChange={onInputChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td></td>\r\n              <td>\r\n                <button className=\"newmessage-button\">Send</button>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const displayAllMessages = () => {\r\n    return messages.map((message) => {\r\n      return (\r\n        <div key={message._id}>\r\n          <SingleMessage\r\n            id={message._id}\r\n            from={message.from}\r\n            subject={message.subject}\r\n            body={message.body}\r\n            created={message.createdAt}\r\n            role=\"message\"\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const displayAllSentMessages = () => {\r\n    return sentMessages.map((message) => {\r\n      return (\r\n        <div key={message._id}>\r\n          <SingleMessage\r\n            id={message._id}\r\n            from={message.to}\r\n            subject={message.subject}\r\n            body={message.body}\r\n            created={message.createdAt}\r\n            role=\"sent\"\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (displayedMessages === \"messages\") {\r\n    return (\r\n      <Fragment>\r\n        {\" \"}\r\n        <div class=\"meni\">\r\n          <a class=\"active-button\" onClick={onMessagesClick}>\r\n            <i class=\"fas fa-inbox\"></i> <span>Inbox</span>\r\n          </a>{\" \"}\r\n          <a onClick={onSentMessagesClick}>\r\n            <i class=\"fas fa-paper-plane\"></i> Sent\r\n          </a>\r\n          <a onClick={sendMessageD}>\r\n            <i class=\"fas fa-plus\"></i> <span> New message</span>\r\n          </a>\r\n        </div>\r\n        {displayAllMessages()}\r\n      </Fragment>\r\n    );\r\n  } else if (displayedMessages === \"sentMessages\") {\r\n    return (\r\n      <Fragment>\r\n        {\" \"}\r\n        <div class=\"meni\">\r\n          <a onClick={onMessagesClick}>\r\n            <i class=\"fas fa-inbox\"></i> <span>Inbox</span>\r\n          </a>{\" \"}\r\n          <a class=\"active-button\" onClick={onSentMessagesClick}>\r\n            <i class=\"fas fa-paper-plane\"></i> Sent\r\n          </a>\r\n          <a onClick={sendMessageD}>\r\n            <i class=\"fas fa-plus\"></i> <span> New message</span>\r\n          </a>\r\n        </div>\r\n        {displayAllSentMessages()}\r\n      </Fragment>\r\n    );\r\n  } else if (displayedMessages === \"sendMessage\") {\r\n    return <div>{displaySendMessage()}</div>;\r\n  }\r\n};\r\n\r\nMessages.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.auth.loading,\r\n  messages: state.auth.user.user.messages,\r\n  sentMessages: state.auth.user.user.sentmessages,\r\n});\r\n\r\nexport default connect(mapStateToProps, { sendMessage })(Messages);\r\n","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\dashboard\\Container.js",["154","155","156","157","158"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport SentMessage from \"../dashboard/SentMessages\";\r\nimport Messages from \"../dashboard/Messages\";\r\nimport { loadUser } from \"../../actions/auth\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport NewMessage from \"../dashboard/NewMessage\";\r\nimport PrivateRoute from \"../routing/PrivateRoute\";\r\n\r\nconst Container = ({ auth: { user } }) => {\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, [loadUser]);\r\n  return !user ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Router>\r\n        <h1 class=\"welcome-name\">\r\n          <i class=\"fas fa-door-open\"></i>Welcome\r\n          <b> {user.user.name}</b>\r\n        </h1>\r\n\r\n        <Switch>\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/dashboard\"\r\n            component={Messages}\r\n          ></PrivateRoute>\r\n        </Switch>\r\n      </Router>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nContainer.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Container);\r\n","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\reducers\\index.js",[],"C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\dashboard\\NewMessage.js",["159"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { sendMessage } from \"../../actions/messages\";\r\n\r\nconst NewMessage = ({ sendMessage }) => {\r\n  const [sendMessageForm, setSentMessageForm] = useState({\r\n    email: \"\",\r\n    subject: \"\",\r\n    body: \"\",\r\n  });\r\n\r\n  const onInputChange = (e) => {\r\n    setSentMessageForm({ ...sendMessageForm, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    sendMessage(sendMessageForm);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"meni\">\r\n        <Link to=\"/dashboard\">\r\n          <i class=\"fas fa-inbox\"></i> <span>Inbox</span>\r\n        </Link>\r\n        <Link to=\"/sent\">\r\n          {\" \"}\r\n          <i class=\"fas fa-paper-plane\"></i> Sent\r\n        </Link>\r\n        <Link class=\"active-button\" to=\"/newmessage\">\r\n          <i class=\"fas fa-plus\"></i> <span> New message</span>\r\n        </Link>\r\n      </div>\r\n      <form onSubmit={onFormSubmit}>\r\n        <table class=\"messages-box\">\r\n          <tr>\r\n            <td>\r\n              <label>To:</label>\r\n            </td>\r\n            <td>\r\n              <input\r\n                required\r\n                type=\"email\"\r\n                class=\"messages-input\"\r\n                name=\"email\"\r\n                value={sendMessageForm.email}\r\n                onChange={onInputChange}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <label>Subject:</label>\r\n            </td>\r\n            <td>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                class=\"messages-input\"\r\n                name=\"subject\"\r\n                value={sendMessageForm.subject}\r\n                onChange={onInputChange}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <label> Body:</label>\r\n            </td>\r\n            <td>\r\n              <input\r\n                required\r\n                class=\"taPoruka\"\r\n                name=\"body\"\r\n                value={sendMessageForm.body}\r\n                onChange={onInputChange}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td></td>\r\n            <td>\r\n              <button>Send</button>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nNewMessage.propTypes = {};\r\n\r\nexport default connect(null, { sendMessage })(NewMessage);\r\n","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\layout\\SingleMessage.js",["160","161","162"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteMessage, deleteSentMessage } from \"../../actions/messages\";\r\nimport PropTypes from \"prop-types\";\r\nimport { loadUser } from \"../../actions/auth\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst SingleMessage = ({\r\n  id,\r\n  from,\r\n  subject,\r\n  body,\r\n  created,\r\n  role,\r\n  deleteMessage,\r\n  deleteSentMessage,\r\n}) => {\r\n  let time1 = created.split(\"T\");\r\n  const time2 = time1[1].split(\".\");\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, [loadUser]);\r\n\r\n  if (role === \"message\") {\r\n    return (\r\n      <div className=\"message\">\r\n        <table>\r\n          <tr>\r\n            <td className=\"td-info\">\r\n              <b>\r\n                <i class=\"fas fa-address-card\"></i>From:\r\n              </b>\r\n            </td>\r\n            <td>{from}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td className=\"td-info\">\r\n              <i class=\"fas fa-envelope\"></i>\r\n              <b>Subject:</b>\r\n            </td>\r\n            <td>[{subject}]</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td className=\"td-info\">\r\n              {\" \"}\r\n              <b>Body:</b>\r\n            </td>\r\n            <td className=\"td-information\">{body}</td>\r\n\r\n            <td>\r\n              <button\r\n                className=\"deletebtn btn-primary\"\r\n                onClick={() => deleteMessage(id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"td-info\">\r\n              <b>Time:</b>\r\n            </td>\r\n\r\n            <td>\r\n              {time2[0]}\r\n              <br></br>\r\n              {time1[0]}\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"message\">\r\n        <table>\r\n          <tr>\r\n            <td className=\"td-info\">\r\n              <span>\r\n                <b>\r\n                  <i class=\"far fa-address-card\"></i>To:\r\n                </b>\r\n              </span>\r\n            </td>\r\n            <td>{from}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td className=\"td-info\">\r\n              <span>\r\n                <i class=\"far fa-envelope\"></i>\r\n                <b>Subject:</b>\r\n              </span>\r\n            </td>\r\n            <td>[{subject}]</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td className=\"td-info\">\r\n              {\" \"}\r\n              <b>Body:</b>\r\n            </td>\r\n            <td className=\"td-information\">{body}</td>\r\n            <td>\r\n              <button\r\n                className=\"deletebtn btn-primary\"\r\n                onClick={() => deleteSentMessage(id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"td-info\">\r\n              <b>Time:</b>\r\n            </td>\r\n            <td>\r\n              {time2[0]}\r\n              <br></br>\r\n              {time1[0]}\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nSingleMessage.propTypes = {\r\n  deleteMessage: PropTypes.func.isRequired,\r\n  deleteSentMessage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteMessage, deleteSentMessage })(\r\n  SingleMessage\r\n);\r\n","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\dashboard\\SentMessages.js",["163"],"import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SentMessages = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <div class=\"meni\">\r\n        <Link to=\"/dashboard\">\r\n          <i class=\"fas fa-inbox\"></i> <span>Inbox</span>\r\n        </Link>\r\n        <Link class=\"active-button\" to=\"/sent\">\r\n          {\" \"}\r\n          <i class=\"fas fa-paper-plane\"></i> Sent\r\n        </Link>\r\n        <Link to=\"/newmessage\">\r\n          <i class=\"fas fa-plus\"></i> <span> New message</span>\r\n        </Link>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nSentMessages.propTypes = {};\r\n\r\nexport default SentMessages;\r\n","C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\vlaji\\Desktop\\Gotovo\\client\\src\\reducers\\alert.js",["164"],"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n",["165","166"],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":26,"column":6,"nodeType":"173","endLine":26,"endColumn":16,"suggestions":"174"},{"ruleId":"171","severity":1,"message":"172","line":13,"column":6,"nodeType":"173","endLine":13,"endColumn":16,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":21,"column":9,"nodeType":"178","messageId":"179","endLine":21,"endColumn":17},{"ruleId":"180","severity":1,"message":"181","line":30,"column":7,"nodeType":"182","endLine":30,"endColumn":70},{"ruleId":"176","severity":1,"message":"183","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"184","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":18},{"ruleId":"176","severity":1,"message":"185","line":95,"column":11,"nodeType":"178","messageId":"179","endLine":95,"endColumn":17},{"ruleId":"176","severity":1,"message":"186","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":17},{"ruleId":"176","severity":1,"message":"184","line":3,"column":16,"nodeType":"178","messageId":"179","endLine":3,"endColumn":24},{"ruleId":"187","severity":1,"message":"188","line":17,"column":11,"nodeType":"182","endLine":17,"endColumn":22},{"ruleId":"187","severity":1,"message":"188","line":22,"column":11,"nodeType":"182","endLine":22,"endColumn":22},{"ruleId":"176","severity":1,"message":"189","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":12},{"ruleId":"171","severity":1,"message":"190","line":14,"column":6,"nodeType":"173","endLine":14,"endColumn":29,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":4,"column":1,"nodeType":"194","endLine":12,"endColumn":3},{"ruleId":"192","severity":1,"message":"195","line":25,"column":1,"nodeType":"194","endLine":72,"endColumn":2},{"ruleId":"176","severity":1,"message":"196","line":63,"column":11,"nodeType":"178","messageId":"179","endLine":63,"endColumn":14},{"ruleId":"176","severity":1,"message":"186","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":17},{"ruleId":"176","severity":1,"message":"183","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":14},{"ruleId":"176","severity":1,"message":"197","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":18},{"ruleId":"187","severity":1,"message":"198","line":48,"column":11,"nodeType":"182","endLine":48,"endColumn":40},{"ruleId":"187","severity":1,"message":"198","line":51,"column":11,"nodeType":"182","endLine":51,"endColumn":44},{"ruleId":"187","severity":1,"message":"198","line":55,"column":11,"nodeType":"182","endLine":55,"endColumn":59},{"ruleId":"187","severity":1,"message":"198","line":156,"column":11,"nodeType":"182","endLine":156,"endColumn":62},{"ruleId":"187","severity":1,"message":"198","line":159,"column":11,"nodeType":"182","endLine":159,"endColumn":44},{"ruleId":"187","severity":1,"message":"198","line":162,"column":11,"nodeType":"182","endLine":162,"endColumn":37},{"ruleId":"187","severity":1,"message":"198","line":174,"column":11,"nodeType":"182","endLine":174,"endColumn":40},{"ruleId":"187","severity":1,"message":"198","line":177,"column":11,"nodeType":"182","endLine":177,"endColumn":66},{"ruleId":"187","severity":1,"message":"198","line":180,"column":11,"nodeType":"182","endLine":180,"endColumn":37},{"ruleId":"176","severity":1,"message":"199","line":2,"column":35,"nodeType":"178","messageId":"179","endLine":2,"endColumn":40},{"ruleId":"176","severity":1,"message":"183","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":14},{"ruleId":"176","severity":1,"message":"200","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":19},{"ruleId":"176","severity":1,"message":"197","line":10,"column":8,"nodeType":"178","messageId":"179","endLine":10,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":16,"column":6,"nodeType":"173","endLine":16,"endColumn":16,"suggestions":"201"},{"ruleId":"176","severity":1,"message":"186","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":17},{"ruleId":"176","severity":1,"message":"183","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"202","line":7,"column":8,"nodeType":"178","messageId":"179","endLine":7,"endColumn":15},{"ruleId":"171","severity":1,"message":"172","line":24,"column":6,"nodeType":"173","endLine":24,"endColumn":16,"suggestions":"203"},{"ruleId":"176","severity":1,"message":"186","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":17},{"ruleId":"192","severity":1,"message":"195","line":4,"column":1,"nodeType":"194","endLine":16,"endColumn":2},{"ruleId":"167","replacedBy":"204"},{"ruleId":"169","replacedBy":"205"},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'loadUser'. Either exclude it or remove the dependency array. Outer scope values like 'loadUser' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["208"],["209"],"no-unused-vars","'funkcija' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'Redirect' is defined but never used.","'errors' is assigned a value but never used.","'PropTypes' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'auth' is defined but never used.","React Hook useEffect has unnecessary dependencies: 'getMessages' and 'loadUser'. Either exclude them or remove the dependency array. Outer scope values like 'loadUser' aren't valid dependencies because mutating them doesn't re-render the component.",["210"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous function","'res' is assigned a value but never used.","'NewMessage' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Route' is defined but never used.","'SentMessage' is defined but never used.",["211"],"'Spinner' is defined but never used.",["212"],["206"],["207"],"no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"213","fix":"215"},{"desc":"213","fix":"216"},{"desc":"213","fix":"217"},{"desc":"213","fix":"218"},"Update the dependencies array to be: []",{"range":"219","text":"220"},{"range":"221","text":"220"},{"range":"222","text":"220"},{"range":"223","text":"220"},{"range":"224","text":"220"},[854,864],"[]",[476,486],[459,482],[633,643],[573,583]]